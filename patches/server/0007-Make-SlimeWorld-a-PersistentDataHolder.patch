From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: kyngs <kyngs@users.noreply.github.com>
Date: Thu, 26 Oct 2023 14:55:39 +0200
Subject: [PATCH] Make SlimeWorld a PersistentDataHolder


diff --git a/src/main/java/com/infernalsuite/asp/SlimeNMSBridgeImpl.java b/src/main/java/com/infernalsuite/asp/SlimeNMSBridgeImpl.java
index 0c1e599aa7d148c40ece1957c89991e1d761162a..4c503e5a31ba38c5a52e9b6738a6ade4fab94b49 100644
--- a/src/main/java/com/infernalsuite/asp/SlimeNMSBridgeImpl.java
+++ b/src/main/java/com/infernalsuite/asp/SlimeNMSBridgeImpl.java
@@ -1,5 +1,6 @@
 package com.infernalsuite.asp;
 
+import com.flowpowered.nbt.CompoundMap;
 import com.infernalsuite.asp.api.SlimeNMSBridge;
 import com.infernalsuite.asp.api.world.SlimeWorld;
 import com.infernalsuite.asp.api.world.SlimeWorldInstance;
@@ -12,6 +13,7 @@ import net.kyori.adventure.util.Services;
 import net.minecraft.SharedConstants;
 import net.minecraft.core.registries.Registries;
 import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.Tag;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.MinecraftServer;
@@ -30,13 +32,18 @@ import org.apache.logging.log4j.Logger;
 import org.bukkit.Bukkit;
 import org.bukkit.World;
 import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.persistence.CraftPersistentDataContainer;
+import org.bukkit.craftbukkit.persistence.CraftPersistentDataTypeRegistry;
+import org.bukkit.persistence.PersistentDataContainer;
 import org.jetbrains.annotations.Nullable;
 
 import java.io.IOException;
 import java.util.Locale;
+import java.util.Map;
 
 public class SlimeNMSBridgeImpl implements SlimeNMSBridge {
 
+    private static final CraftPersistentDataTypeRegistry REGISTRY = new CraftPersistentDataTypeRegistry();
     private static final SimpleDataFixerConverter DATA_FIXER_CONVERTER = new SimpleDataFixerConverter();
 
     private static final Logger LOGGER = LogManager.getLogger("SWM");
@@ -49,6 +56,26 @@ public class SlimeNMSBridgeImpl implements SlimeNMSBridge {
         return (SlimeNMSBridgeImpl) SlimeNMSBridge.instance();
     }
 
+    @Override
+    public void extractCraftPDC(PersistentDataContainer source, CompoundMap target) {
+        if (source instanceof CraftPersistentDataContainer craftPDC) {
+            for (Map.Entry<String, Tag> entry : craftPDC.getRaw().entrySet()) {
+                target.put(Converter.convertTag(entry.getKey(), entry.getValue()));
+            }
+        } else {
+            throw new IllegalArgumentException("PersistentDataContainer is not a CraftPersistentDataContainer");
+        }
+    }
+
+    @Override
+    public PersistentDataContainer extractCompoundMapIntoCraftPDC(CompoundMap source) {
+        var container = new CraftPersistentDataContainer(REGISTRY);
+        for (Map.Entry<String, com.flowpowered.nbt.Tag<?>> entry : source.entrySet()) {
+            container.put(entry.getKey(), Converter.convertTag(entry.getValue()));
+        }
+        return container;
+    }
+
     @Override
     public boolean loadOverworldOverride() {
         if (defaultWorld == null) {
diff --git a/src/main/java/com/infernalsuite/asp/level/NMSSlimeWorld.java b/src/main/java/com/infernalsuite/asp/level/NMSSlimeWorld.java
index 3dc776b5387b4e2f1b669f754b5b064fc0142006..76ee216925d9ced3c9bf1e7e8e1d8b80ca9f8e50 100644
--- a/src/main/java/com/infernalsuite/asp/level/NMSSlimeWorld.java
+++ b/src/main/java/com/infernalsuite/asp/level/NMSSlimeWorld.java
@@ -9,6 +9,8 @@ import com.infernalsuite.asp.api.world.properties.SlimePropertyMap;
 import net.minecraft.SharedConstants;
 import net.minecraft.server.level.ChunkHolder;
 import net.minecraft.world.level.chunk.LevelChunk;
+import org.bukkit.persistence.PersistentDataContainer;
+import org.jetbrains.annotations.NotNull;
 
 import java.io.IOException;
 import java.util.Collection;
@@ -88,4 +90,9 @@ public class NMSSlimeWorld implements SlimeWorld {
     public int getDataVersion() {
         return SharedConstants.getCurrentVersion().getDataVersion().getVersion();
     }
+
+    @Override
+    public @NotNull PersistentDataContainer getPersistentDataContainer() {
+        return memoryWorld.getPersistentDataContainer();
+    }
 }
\ No newline at end of file
diff --git a/src/main/java/com/infernalsuite/asp/level/SlimeInMemoryWorld.java b/src/main/java/com/infernalsuite/asp/level/SlimeInMemoryWorld.java
index 5d325e85a4634c21ab0bec12b493ea9b857d8ff3..35d0dd30b3c91b423c03a8f1682a422bf5eb8bc1 100644
--- a/src/main/java/com/infernalsuite/asp/level/SlimeInMemoryWorld.java
+++ b/src/main/java/com/infernalsuite/asp/level/SlimeInMemoryWorld.java
@@ -5,6 +5,7 @@ import com.infernalsuite.asp.ChunkPos;
 import com.infernalsuite.asp.Converter;
 import com.infernalsuite.asp.api.exceptions.WorldAlreadyExistsException;
 import com.infernalsuite.asp.api.loaders.SlimeLoader;
+import com.infernalsuite.asp.pdc.FlowPersistentDataContainer;
 import com.infernalsuite.asp.serialization.slime.SlimeSerializer;
 import com.infernalsuite.asp.skeleton.SkeletonCloning;
 import com.infernalsuite.asp.skeleton.SkeletonSlimeWorld;
@@ -19,6 +20,8 @@ import net.minecraft.world.level.chunk.UpgradeData;
 import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.ticks.LevelChunkTicks;
 import org.bukkit.World;
+import org.bukkit.persistence.PersistentDataContainer;
+import org.jetbrains.annotations.NotNull;
 
 import java.io.IOException;
 import java.util.ArrayList;
@@ -38,6 +41,7 @@ public class SlimeInMemoryWorld implements SlimeWorld, SlimeWorldInstance {
     private final SlimeWorld liveWorld;
 
     private final CompoundTag extra;
+    private final FlowPersistentDataContainer extraPDC;
     private final SlimePropertyMap propertyMap;
     private final SlimeLoader loader;
 
@@ -60,6 +64,7 @@ public class SlimeInMemoryWorld implements SlimeWorld, SlimeWorldInstance {
             this.chunkStorage.put(pos, initial);
         }
 
+        this.extraPDC = new FlowPersistentDataContainer(extra);
         this.liveWorld = new NMSSlimeWorld(this);
     }
 
@@ -260,4 +265,9 @@ public class SlimeInMemoryWorld implements SlimeWorld, SlimeWorldInstance {
     public SlimeLevelInstance getInstance() {
         return instance;
     }
+
+    @Override
+    public @NotNull PersistentDataContainer getPersistentDataContainer() {
+        return this.extraPDC;
+    }
 }
